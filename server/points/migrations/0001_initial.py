# Generated by Django 4.2.7 on 2025-07-12 05:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PointsRedemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_spent', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('fulfilled', 'Fulfilled')], default='pending', max_length=15)),
                ('rejection_reason', models.TextField(blank=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Points Redemption',
                'verbose_name_plural': 'Points Redemptions',
                'db_table': 'points_redemptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PointsSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_type', models.CharField(choices=[('listing_reward', 'Points for Listing Item'), ('swap_reward', 'Points for Completing Swap'), ('referral_reward', 'Points for Successful Referral'), ('badge_bonus', 'Bonus Points for Badge'), ('daily_login', 'Daily Login Bonus'), ('review_bonus', 'Points for Leaving Review')], max_length=20, unique=True)),
                ('points_value', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('conditions', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Points Setting',
                'verbose_name_plural': 'Points Settings',
                'db_table': 'points_settings',
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('earned_listing', 'Earned from Item Listing'), ('earned_swap', 'Earned from Completed Swap'), ('earned_referral', 'Earned from Referral'), ('earned_badge', 'Earned from Badge Achievement'), ('earned_bonus', 'Bonus Points'), ('spent_redemption', 'Spent on Item Redemption'), ('spent_premium', 'Spent on Premium Features'), ('admin_adjustment', 'Admin Adjustment'), ('expired', 'Points Expired')], max_length=20)),
                ('points', models.IntegerField()),
                ('description', models.CharField(max_length=500)),
                ('related_item_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_swap_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_badge_id', models.PositiveIntegerField(blank=True, null=True)),
                ('balance_before', models.PositiveIntegerField()),
                ('balance_after', models.PositiveIntegerField()),
                ('admin_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Point Transaction',
                'verbose_name_plural': 'Point Transactions',
                'db_table': 'point_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('uses_count', models.PositiveIntegerField(default=0)),
                ('max_uses', models.PositiveIntegerField(default=10)),
                ('points_for_referrer', models.PositiveIntegerField(default=50)),
                ('points_for_referee', models.PositiveIntegerField(default=25)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Referral Code',
                'verbose_name_plural': 'Referral Codes',
                'db_table': 'referral_codes',
            },
        ),
        migrations.CreateModel(
            name='ReferralUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referee_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referee_referral', to='points.pointtransaction')),
                ('referral_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uses', to='points.referralcode')),
            ],
            options={
                'verbose_name': 'Referral Use',
                'verbose_name_plural': 'Referral Uses',
                'db_table': 'referral_uses',
            },
        ),
    ]
